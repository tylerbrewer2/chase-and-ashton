"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddonStore = undefined;

var _keys = require("babel-runtime/core-js/object/keys");

var _keys2 = _interopRequireDefault(_keys);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AddonStore = exports.AddonStore = function () {
  function AddonStore() {
    (0, _classCallCheck3.default)(this, AddonStore);

    this._loaders = {};
    this._panels = {};
    this._channel = null;
    this._preview = null;
    this._database = null;
  }

  (0, _createClass3.default)(AddonStore, [{
    key: "getChannel",
    value: function getChannel() {
      return this._channel;
    }
  }, {
    key: "setChannel",
    value: function setChannel(channel) {
      this._channel = channel;
    }
  }, {
    key: "getPreview",
    value: function getPreview() {
      return this._preview;
    }
  }, {
    key: "setPreview",
    value: function setPreview(preview) {
      this._preview = preview;
    }
  }, {
    key: "getDatabase",
    value: function getDatabase() {
      return this._database;
    }
  }, {
    key: "setDatabase",
    value: function setDatabase(database) {
      this._database = database;
    }
  }, {
    key: "getPanels",
    value: function getPanels() {
      return this._panels;
    }
  }, {
    key: "addPanel",
    value: function addPanel(name, panel) {
      this._panels[name] = panel;
    }
  }, {
    key: "register",
    value: function register(name, loader) {
      this._loaders[name] = loader;
    }
  }, {
    key: "loadAddons",
    value: function loadAddons(api) {
      var _this = this;

      (0, _keys2.default)(this._loaders).map(function (name) {
        return _this._loaders[name];
      }).forEach(function (loader) {
        return loader(api);
      });
    }
  }]);
  return AddonStore;
}();

exports.default = new AddonStore();